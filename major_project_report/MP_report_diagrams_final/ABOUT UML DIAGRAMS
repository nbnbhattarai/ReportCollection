About UML diagrams



USE CASE 
----------------------------------------------------------------------[
A use case diagram represents user's interaction with the system that shows the relationship between the user and the different use cases in which the user is involved. A use case diagram can identify different types of users of a system, different use cases as well. A use-case diagram provides higher-level view of the system. Use case diagrams are the blueprints for the system. The use cases are shown as ovals, actors as stick people (even if they are machines), with lines (known as associations) connecting use cases to the actors who are involved with them. A box around the use cases emphasizes the boundary between the system (defined by the use cases) and the actors who are outside of the system. In our case, actor 'user' can log in to the system, allow system to access his profile information and view output or result from the system. Similar is the case for 'system' and 'sys_admin'.

ERD
----------------------------------------------------------------------
An Entity-Relationship model describes inter-related things of interest in a specific domain of knowledge. In software development, ER model has become an abstract data model that defines a data/information structure that can be implemented in a database, typically a relational database. In our database, we have separate tables for user, music, recommendation and session .Each table has several attributes that best describe the table. To get required information, say we need to print details of particular user, we need to access database and more than one tables to retrieve data. We need certain relationship between each tables in our database and a common attribute to map tuples of one table to another. ER Diagram provides visual reference to complete database at one glance. We can develop database looking at the ER Diagram and later use it as reference for further improvement. 


ACTIVITY DIAGRAM 
--------------------------------------------------------------------------------------
Activity Diagram describes the dynamic aspects of the system. It diagram shows user oriented view of system operation. We have made activity diagram using swim-lanes. A swim lane is a visual element that distinguishes job sharing and responsibilities for sub-processes. In our system's activity diagram, we have three swim-lanes and we have separated job/responsibilities accordingly. Each step is continuation of previous step. Decision is taken wherever necessary and fork and join is used to divide or attach work flow. The objective of making activity diagram is similar to objectives of other UML Diagrams. Only difference is that it is used to show message flow between activities.


CONTEXT DIAGRAM
-------------------------------------------------------------------------------------
A system context diagram (SCD) in engineering is a diagram that defines the boundary between the system, or part of a system, and its environment, showing the entities that interact with it. This diagram is a high level view of a system. It is similar to a block diagram. In our system context diagram, there are two entities namely, user and sys_admin and a process (which is the system we developed as our project). This diagram shows the input and output for each of the entity as well as the process.


LEVEL 0 DATA FLOW DIAGRAM (DFD-0)
-------------------------------------------------------------------------------
A data flow diagram (DFD) is a graphical representation of the "flow" of data through an information system, modelling its process aspects. A DFD shows what kind of information will be input to and output from the system, how the data will advance through the system, and where the data will be stored. However, it does not show information about process timing or whether processes will operate in sequence or in parallel Being a UML diagram, DFD presents both control and data flows as a unified model. Given diagram is the level-0 DFD that shows internal distinct process of our system. There are four processes and a datastore which stores all data, intermediate outcomes and results. Two entities, user and sys_admin, take part in flow of data to/from these process. Each arrow head in the data flow diagram shows the direction of the data/information flow and label provide type of data/information that flows through.
